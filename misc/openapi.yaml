openapi: 3.0.0
info:
  title: Quote API
  description: API for managing quotes and products
  version: 1.0.0

servers:
  - url: https://api.example.com

paths:
  /health:
    get:
      summary: Health Check
      description: Returns the health status of the service
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok

  /api/v1/quote:
    post:
      summary: Create a Quote
      description: Creates a new quote and returns quote details
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                author:
                  type: string
                  example: A2
                customer_name:
                  type: string
                  example: Client1
                product_list:
                  type: array
                  items:
                    type: string
                  example: ["2", "4"]
      responses:
        '201':
          description: Quote created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  author:
                    type: string
                  customer_name:
                    type: string
                  product_list:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        price:
                          type: number
                        tax:
                          type: number
                  total_price:
                    type: number
                  total_tax:
                    type: number
                  status:
                    type: string
                    example: created

  /api/v1/quotes/{id}:
    get:
      summary: Retrieve a Quote
      description: Retrieves a quote by its ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Quote details
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  author:
                    type: string
                  customer_name:
                    type: string
                  product_list:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        price:
                          type: number
                        tax:
                          type: number
                  total_price:
                    type: number
                  total_tax:
                    type: number
                  status:
                    type: string

  /api/v1/quote/{id}/status:
    put:
      summary: Update Quote Status
      description: Updates the status of a quote, potentially converting it to an order
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: accepted
      responses:
        '200':
          description: Quote status updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Quote status updated successfully

  /api/v1/all-products:
    get:
      summary: List All Products
      description: Retrieves all available products
      responses:
        '200':
          description: A list of products
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    price:
                      type: number
                    tax:
                      type: number
